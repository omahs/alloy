searchState.loadedDescShard("alloy_rpc_types_beacon", 0, "Beacon API types\nBLS public key type\nBLS signature type\nBeacon API events support. Support for the Beacon API …\nBeacon block header types.\nPayload support for the beacon API.\nFlashbots relay API types.\nThe Domain Separation Tag for hash_to_point in Ethereum …\nThe number of bytes in a BLS12-381 public key.\nThe number of bytes in a BLS12-381 secret key.\nThe number of bytes in a BLS12-381 signature.\nEvent for the <code>Attestation</code> topic of the beacon API node …\nTopic variant for the eventstream API\nEvent for the <code>BlobSidecar</code> topic of the beacon API node …\nEvent for the <code>Block</code> topic of the beacon API node event …\nEvent for the <code>BlsToExecutionChange</code> topic of the beacon API …\nEvent for the <code>ChainReorg</code> topic of the beacon API node …\nEvent for the <code>ContributionAndProof</code> topic of the beacon API …\nEvent for the <code>Deposit</code> topic of the beacon API node event …\nEvent for the <code>Head</code> topic of the beacon API node event …\nEvent for the <code>LightClientFinalityUpdate</code> topic of the …\nEvent for the <code>LightClientOptimisticUpdate</code> topic of the …\nData of the event that contains the payload attributes\nEvent for the <code>payload_attributes</code> topic of the beacon API …\nEvent for the <code>VoluntaryExit</code> topic of the beacon API node …\nReturns the payload attributes\nWrapped data of the event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nthe execution block hash of the parent block.\nthe execution block number of the parent block.\nthe beacon block root of the parent block to be built upon.\nBeacon API encoding of <code>PayloadAttributesV&lt;N&gt;</code> as defined by …\nThe slot at which a block using these payload attributes …\nThe execution block number of the parent block. the …\nReturns the identifier value for the eventstream query\nthe identifier of the beacon hard fork at <code>proposal_slot</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe header of a beacon block.\nBeaconBlockHeader with a signature.\nContainer type for a beacon block header.\nThe response to a request for a <strong>single</strong> beacon block …\nThe response to a request for beacon block headers: …\nThe tree hash merkle root of the BeaconBlockBody for the …\nWhether the block is part of the canonical chain\nContainer for the header data.\nContainer for the header data.\nTrue if the response references an unverified execution …\nTrue if the response references an unverified execution …\nTrue if the response references the finalized history of …\nTrue if the response references the finalized history of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe <code>SignedBeaconBlockHeader</code> object envelope from the CL …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>BeaconBlockHeader</code> object from the CL spec.\nThe signing merkle root of the parent BeaconBlock.\nIndex of validator in validator registry.\nroot hash of the block\nThe slot to which this block corresponds.\nThe tree hash merkle root of the BeaconState for the …\nRepresents all possible payload versions.\nOptimism Payload Attributes\nThe header of the execution payload.\nResponse object of GET …\nV1 payload\nV2 payload\nV3 payload\nV4 payload\nA helper module for serializing and deserializing the …\nA helper module for serializing and deserializing optimism …\nA helper serde module to convert from/to the Beacon API …\nA helper serde module to convert from/to the Beacon API …\nA helper serde module to convert from/to the Beacon API …\nA helper serde module to convert from/to the Beacon API …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInner V1 payload\nInner V1 payload\nInner V1 payload\nArray of <code>Withdrawal</code> enabled with V2 See …\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.\nSort result by ascending value (lowest value first)\nRepresents public information about a block sent by a …\nA Request to validate a SubmitBlockRequest …\nA Request to validate a SubmitBlockRequest …\nQuery for the GET …\nSort result by descending value (highest value first)\nOrderBy : Sort results in either ascending or descending …\nQuery for the GET …\nSubmission for the <code>/relay/v1/builder/blocks</code> endpoint …\nSubmission for the <code>/relay/v1/builder/blocks</code> endpoint …\nSubmission for the <code>/relay/v1/builder/blocks</code> endpoint …\nSignedBidTrace is a BidTrace with a signature\nSubmitBlockRequest is the request from the builder to …\nRepresents an entry of the <code>/relay/v1/builder/validators</code> …\nDetails of a validator registration.\nRepresents the message of a validator registration.\nThe Deneb block bundle for this bid.\nSets the specific blockhash\nSets the specific blockhash\nThe hash of the block.\nSearch for a specific blockhash\nSearch for a specific blockhash\nSets the specific EL block number\nSets the specific EL block number\nSearch for a specific EL block number\nSearch for a specific EL block number\nSets the builder public key\nSets the specific builder public key\nThe public key of the builder.\nFilter results by a builder public key\nSearch for a specific builder public key.\nDetails of the validator registration.\nError types for the relay.\nThe execution payload for the submission.\nThe execution payload for the submission.\nThe execution payload for the submission.\nThe execution payload for the block submission.\nThe fee recipient’s address.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe gas limit for the registration.\nThe gas limit associated with the block.\nThe gas used within the block.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the maximum number of entries (200 max)\nSets the maximum number of entries (200 max)\nMaximum number of entries (200 max)\nMaximum number of entries (200 max)\nThe registration message.\nThe BidTrace message associated with the submission.\nThe BidTrace message associated with the submission.\nThe BidTrace message associated with the submission.\nThe BidTrace message associated with the submission.\nThe BidTrace message associated with the block submission.\nConfigures how to order results\nHow to order results\nOrder results by ascending value (lowest value first)\nOrder results by descending value (highest value first)\nThe parent hash of the block.\nThe recipient of the proposer’s fee.\nSets the proposer public key\nThe public key of the proposer.\nFilter results by a proposer public key\nThe public key of the validator.\nThe registered gas limit for the validation request.\nThe registered gas limit for the validation request.\nThe SubmitBlockRequest data to be validated.\nThe SubmitBlockRequest data to be validated.\nThe signature for the registration.\nThe signature associated with the submission.\nThe signature associated with the submission.\nThe signature associated with the submission.\nThe signature associated with the submission.\nThe signature associated with the block submission.\nSets the specific slot\nSets the specific slot\nThe slot number for the validator entry.\nThe slot associated with the block.\nA specific slot\nA specific slot\nThe timestamp of the registration.\nThe index of the validator.\nThe value associated with the block.\nThe withdrawals root for the validation request.\nThrown if block hash mismatches\nThrown if block hash mismatches\nThrown if block hash mismatches\nThrown if parent hash mismatches\nError thrown by the <code>validateBuilderSubmission</code> endpoints if …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe actual parent hash\nThe actual block hash\nThe actual gas limit\nThe actual gas used\nThe expected parent hash\nThe expected block hash\nThe expected gas limit\nThe expected gas used\nBundle of blobs for a given block\nIndividual Blob data that belongs to a 4844 transaction.\nIntermediate type for BlobTransactionSidecar matching\nBlob data\nVec of individual blob data\nHelper function to deserialize boxed blobs\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBlob index\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe blob’s commitment\nThe blob’s inclusion proofs\nThe blob’s proof\nReturns a BlobTransactionSidecar of len num_hashes.\nThe block header containing the blob\nSame as Withdrawal but respects the Beacon API format …\nA helper serde module to convert from/to the Beacon API …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDeserialize the payload attributes for the beacon API.\nSerialize the payload attributes for the beacon API.")